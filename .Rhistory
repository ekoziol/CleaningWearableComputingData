data <- download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
data <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
data <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "CDquiz1-q1.csv")
?download.file()
data <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "CDquiz1-q1.csv", method = "curl")
df <- data.frame(data)
getwd()
ls
df <- read.csv("CDquiz1-q1.csv")
df
df[2,]
?count
?count()
df[df$VAL > 1000000]
?read.csv()
df[1,2]
?data.frame()
names(df)
df[df["VAL"] > 1000000]
nrows(df[df["VAL"] > 1000000])
length(df[df["VAL"] > 1000000])
names(df)
df$VAL
df$VAL > 1000000
sum(df$VAL > 1000000)
sum(df$VAL > 1000000, na.rm = TRUE)
df[df$VAL > 1000000]
df[$VAL > 1000000]
df["VAL" > 1000000]
length(df["VAL" > 1000000])
length(df[df["VAL"] > 1000000])
nrows(df["VAL" > 1000000])
dim(df["VAL" > 1000000])
df$VAL > 1000000
df$VAL
length(df[df["VAL"] > 1000000], na.rm=TRUE)
View(df)
dim(df["VAL" > 1000000])
dim(df["VAL"])
dim(df["VAL"]>1000000)
df["VAL"]>1000000
c(df["VAL"]>1000000)
df[df["VAL"]>1000000 & df["VAL"]!=FALSE]
df["VAL"]==24
df[df$VAL == 24]
df[df$VAL == 24,]
df[df$VAL == 24,]$VAL
length(df[!is.na(df[df$VAL == 24,]$VAL)])
df[!is.na(df[df$VAL == 24,]$VAL)]
df[!is.na(df[df$VAL == 24,]]$VAL
df[!is.na(df[df$VAL == 24,])]$VAL
df[!is.na(df[df$VAL == 24,]$VAL)]
x <- df[df$VAL == 24,]$VAL)
x <- df[df$VAL == 24,]$VAL
!is.na(x)
sum(!is.na(x))
data2 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "CDquiz1-q2.csv", method = "curl")
ci <- 7:15
ri <- 18-23
?read.xlsx()
?read.xlsx
install.packages("xlsx")
dat <- read.xlsx("CDquiz1-q3.csv", sheetIndex=1, colIndex=ci, rowIndex=ri)
read.xlsx()
?read.xlsx()
?read.xlsx2()
dat <- read.xlsx("CDquiz1-q3.xlsx", sheetIndex=1, colIndex=ci, rowIndex=ri)
data2 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "CDquiz1-q2.xlsx", method = "curl")
library(xlsx)
dat <- read.xlsx("CDquiz1-q3.xlsx", sheetIndex=1, colIndex=ci, rowIndex=ri)
dat <- read.xlsx("CDquiz1-q2.xlsx", sheetIndex=1, colIndex=ci, rowIndex=ri)
sum(dat$Zip*dat$Ext,na.rm=T)
View(dat)
data2 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml4", "CDquiz1-q4.xml", method = "curl")
library(xml)
data2 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "CDquiz1-q4.xml", method = "curl")
data2 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "CDquiz1-q5.csv", method = "curl")
library(XML)
install.packages("XML")
library(XML)
x <- read.XML("CDquiz1-q4.xml")
x <- xmlTreeParse("CDquiz1-q4.xml", useInternal=TRUE)
rootNode <- xmlRoot(x)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode", 21231)
xpathSApply(rootNode, "//zipcode=21231", xmlValue)
xpathSApply(rootNode, "//zipcode==21231", xmlValue)
xpathSApply(rootNode, "//zipcode=21231", xmlValue)
xpathSApply(rootNode, "//zipcode=21231", xmlValues)
xpathSApply(rootNode, '//zipcode="21231"', xmlValue)
xpathSApply(rootNode, "//li[@zipcode='21231']", xmlValues)
xpathSApply(rootNode, "//li[@zipcode='21231']", xmlValue)
zips <- xpathSApply(rootNode, "//li[@zipcode='21231']", xmlValue)
zips
zips <- xpathSApply(rootNode, "//li[@class='zipcode']", xmlValue)
zips
DT <- fread("CDquiz1-q5.csv")
?fread()
?data.table(fread())
data.table.fread()
install.packages("fread")
?fread
??fread
DT <- data.table("CDquiz1-q5.csv")
DT <- data.frame("CDquiz1-q5.csv")
View(DT)
View(DT)
View(DT)
DT <- read.csv("CDquiz1-q5.csv")
View(DT)
DT[,mean(pwftp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
add2 <- function(x,y){
x + y
}
add2(2,4)
x[use]
}
use <- x > 10
x[use]
}
above10 <- function(x){
use <- x > 10
x[use]
}
above10(c(3,11,5,23))
above <- function(x,n=10){
use <- x > n
x[use]
}
above(c(3,11,24,15))
above(c(3,11,24,15), 15)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
View(dat)
columnmean(dat)
make.power <- function(n){
pow <- function(x){
x^n
}
power
}
make.power(3)(4)
cube <- make.power(3)
cube(4)
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
make.power(3)(4)
source('~/CleaningWearableComputingData/run_analysis.R')
getwd()
setwd("CleaningWearableComputingData")
source('~/CleaningWearableComputingData/run_analysis.R')
View(x_combined)
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
View(features)
View(features)
source('~/CleaningWearableComputingData/run_analysis.R')
desiredDescriptors
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
desiredDescriptors
theStds
theStds[1]
theStds[1,1]
theStds[1][1]
theStds[1][0]
theStds[1][1]
theStds[1][2]
theStds[1,2]
theStds[1,1]
theStds
source('~/CleaningWearableComputingData/run_analysis.R')
features[1]
theStds
?sapply
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
simplify2array(desiredDescriptors)
desiredDescriptors[1,]
features
c(features)
source('~/CleaningWearableComputingData/run_analysis.R')
source('~/CleaningWearableComputingData/run_analysis.R')
library(datasets)
data(irsi)
data(iris)
?iris
iris
x <- iris[iris$Species == "virginica", Septal.length]
x <- iris[iris$Species == "virginica", Sepal.length]
names(iris)
x <- iris[iris$Species == "virginica", Sepal.Length]
x <- iris[iris$Species == "virginica", "Sepal.Length"]
x
mean(x)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcards
?mtcars
mtcards
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$hp), mean)
apply(iris,2,mean)
apply(mtcars,2,mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429-82.63636
debug(ls)
ls
ls
?ls
?debug
debug(ls)
ls
2
3
ls
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
q2 <- source("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ")
q2 <- source("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ", method = "curl")
q2 <- source("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", method = "curl")
q2 <- file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", method = "curl")
q2 <- file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
q2
source('~/CleaningWearableComputingData/run_analysis.R')
quit()
debug()
ls
?debug
undebug(ls)
getwd()
source('~/CleaningWearableComputingData/run_analysis.R')
features
?grep
source('~/CleaningWearableComputingData/run_analysis.R')
# these columns so that like descriptors are next to each other.
theMeans <- sapply(X=features, FUN=grep,
pattern="mean", value=TRUE,
simplify=TRUE)
theStds <- sapply(X=features, FUN=grep,
pattern="std", value=TRUE,
